import { RsBuffer } from '@server/net/rs-buffer';
import { DataParser } from './data-parser';

const VERSION_LIST = [
    0xff, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x80, 0xfe, 0xbb, 0xa4, 0x5f,
    0x0, 0x0, 0x0, 0x0, 0x2b, 0x3d, 0x5c, 0xd8, 0x0, 0x0, 0x0, 0x0, 0xf9,
    0xb4, 0x1a, 0xe1, 0x0, 0x0, 0x0, 0xfe, 0x5c, 0xb0, 0x6b, 0xd7, 0x0,
    0x0, 0x0, 0x6c, 0x5a, 0x62, 0xe0, 0x19, 0x0, 0x0, 0x0, 0x14, 0xa6,
    0x84, 0x2e, 0x77, 0x0, 0x0, 0x0, 0x54, 0xa, 0xe4, 0x31, 0x30, 0x0,
    0x0, 0x0, 0x0, 0x67, 0xf7, 0x9b, 0x5a, 0x0, 0x0, 0x0, 0x74
];

/**
 * Handles the version list transfer with the server.
 */
export class VersionListParser extends DataParser {

    public parse(buffer?: RsBuffer): void {
        if(!buffer) {
            throw ('No data supplied for version list transfer');
        }

        for(let i = 0; i < 4; i++) {
            buffer.readUnsignedByte(); // junk
        }

        const outputBuffer = RsBuffer.create();

        for(const version of VERSION_LIST) {
            outputBuffer.writeUnsignedByte(version);
        }

        this.clientConnection.socket.write(outputBuffer.getData());
    }
}
